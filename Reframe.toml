[reframe]
name = "ERC721"
author = "anvie"
min_version = "0.5.0"

[project]
name = "ERC721"
version = "0.1.0"
ignore_dirs = [
    "target", "build"
]

finish_text = """Usage:

    $ cd $name_kebab_case$

Install prerequisites:

    $ pip install -r requirements.txt

Test:

    $ brownie run scripts/test.py

Edit .env to configure the keys.

Deploy:

    $ brownie run scripts/deploy.py
"""

[[param]]
description = { ask = "Description ?", default = "My ERC-721 Smart contract" }

[[param]]
author_name = { ask = "Author name?", default="Author" }

[[param]]
author_email = { ask = "Author email?", default="author@example.com" }

[[param]]
token_code = { ask = "Token code?", default="TOKN" }

[[param]]
with_max_supply = { ask = "With max supply?", default="true" }

[[param]]
max_supply = { ask = "Max supply? (Unit)", default="8000", if="with_max_supply" }

[[param]]
project_id = { ask = "Project ID", default="0" }

#[[param]]
#deployer_private_key = { ask = "Deployer private key", default="0x0" }

[[param]]
owner_address = { ask = "Owner address", default="0x0" }

[[param]]
with_free_minting = { ask = "With free minting?", default="true" }

[[param]]
with_paid_minting = { ask = "With paid minting?", default="true" }
with_whitelist_minting = { ask = "With whitelist minting?", default="true" }

[[param]]
mint_price = { ask = "Mint price? (Unit in ether)", default="0.1", if="with_paid_minting" }

[[present]]
path="contracts/SigVerifier.sol"
if="with_whitelist_minting"
